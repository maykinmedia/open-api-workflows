name: open-api-workflow publish
on:
  workflow_call:
    inputs:
      docker-image-name:
        required: true
        type: string
        description: "Name for the docker image to be build"

      repository-owner:
        required: true
        type: string
        description: |
          'Name of the repository owner. Used when determining wether to publish or not'

    secrets:
      docker-username:
        required: true

      docker-token:
        required: true

jobs:
  publish:
    name: Push Docker image
    runs-on: ubuntu-latest
    if: >
      github.event_name == 'push' &&
      github.repository_owner == inputs.repository-owner &&
      (github.ref_type == 'tag' || github.ref == format('refs/heads/{0}', github.event.repository.default_branch))

    steps:
      - uses: actions/checkout@v4
      - name: Download built image
        uses: actions/download-artifact@v4
        with:
          name: docker-image
          run-id: ${{ github.run_id }}

      - name: Determine tag/commit hash
        id: vars
        run: |
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Use Docker `latest` tag convention for the default branch
          [[ "${{ github.event.repository.default_branch }}" == $VERSION ]] && VERSION=latest

          # Strip "v" prefix from tag name (if present at all)
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          echo "tag=${VERSION}" >> $GITHUB_OUTPUT

      - name: Load image
        run: |
          docker image load -i image.tar

      - name: Log into registry
        run: echo "${{ secrets.docker-token }}" | docker login -u ${{ secrets.docker-username }} --password-stdin

      - name: Push the Docker image
        run: docker push ${{ inputs.docker-image-name }}:${{ steps.vars.outputs.tag }}
