on:
  workflow_call:
    inputs:
      apt-packages:
        required: false
        type: string

      python-version:
        required: true
        type: string
      node-version:
        required: true
        type: string

      isort-src-pattern:
        required: true
        type: string
      black-src-pattern:
        required: true
        type: string
      flake8-src-pattern:
        required: true
        type: string

      django-settings-module:
        required: true
        type: string
      django-secret-key:
        required: false
        type: string

      db-name:
        required: false
        type: string
        default: 'postgres'
      db-user:
        required: false
        type: string
        default: 'postgres'
      db-password:
        required: false
        type: string
        default: ''

jobs:
  formatting:
    name: Run Isort
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Set up backend environment
        uses: maykinmedia/setup-django-backend@v1.3
        with:
          apt-packages: ${{ inputs.apt-packages }}
          python-version: ${{ inputs.python-version }}
          setup-node: false
      - name: Run isort
        run: isort --check-only --diff ${{ inputs.isort-src-pattern }}
      - name: Run black
        run: black --check --diff ${{ inputs.black-src-dirs }}
      - name: Run flake8
        run: flake8 ${{ inputs.flake8-src-dirs }}

  migrations:
    name: Check for model changes not present in the migrations
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgis/postgis:12-2.5 # TODO: retrieve from inputs
        env:
          POSTGRES_HOST_AUTH_METHOD: trust
        ports:
          - 5432:5432
        # Needed because the postgres container does not provide a healthcheck
        options:
          --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v4
      - name: Set up backend environment
        uses: maykinmedia/setup-django-backend@v1.3
        with:
          apt-packages: ${{ inputs.apt-packages }}
          python-version: ${{ inputs.python-version }}
          setup-node: false

      - name: Check for missing migrations
        run: src/manage.py makemigrations --check --dry-run
        env:
          DJANGO_SETTINGS_MODULE: ${{ inputs.django-settings-module }}
          SECRET_KEY: ${{ inputs.django-settings-module }}
          DB_USER: ${{ inputs.db-user }}
          DB_NAME: ${{ inuts.db-name }}
          DB_PASSWORD: ${{ inputs.db-password }}

  oas-up-to-date:
    name: Check for unexepected OAS changes
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: maykinmedia/setup-django-backend@v1.3
        with:
          apt-packages: ${{ inputs.apt-packages }}
          python-version: ${{ inputs.python-version }}
          setup-node: true

      - name: Generate OAS files
        run: ./bin/check_schema.sh
        env:
          DJANGO_SETTINGS_MODULE: ${{ inputs.django-settings-module }}
        shell: bash
